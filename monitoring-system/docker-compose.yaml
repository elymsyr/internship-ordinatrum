# version: "3.8"

volumes:

  prometheus-data:
    driver: local

  grafana-data:
    driver: local

services:

  prometheus:
    image: docker.io/prom/prometheus:v2.53.0
    container_name: prometheus
    ports:
      - 9090:9090
    command: "--config.file=/etc/prometheus/prometheus.yaml"
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - prometheus-data:/prometheus
      - ./config/alert.rules.yml:/etc/prometheus/alert.rules.yml
    restart: unless-stopped

  grafana:
    image: docker.io/grafana/grafana-oss:11.3.1-ubuntu
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini       # Bind-mount the custom grafana.ini
      - ./defaults.ini:/usr/share/grafana/conf/defaults.ini  # Bind-mount the custom defaults.ini
    # environment:
    #   - GF_SMTP_ENABLED=true
    #   - GF_SMTP_HOST=smtp.example.com:587
    #   - GF_SMTP_USER=grafanaalerttestordinatrum@gmail.com
    #   - GF_SMTP_PASSWORD=12345678A!
    #   - GF_SMTP_FROM_ADDRESS=grafanaalerttestordinatrum@gmail.com
    #   - GF_SMTP_SKIP_VERIFY=true
    #   - GF_SECURITY_ADMIN_USER=adminOrdinatrum
    #   - GF_SECURITY_ADMIN_PASSWORD=Ilovearcbox!100
      # - GF_SECURITY_ALLOW_EMBEDDING=true
    restart: unless-stopped

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.8.1
    container_name: node_exporter
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave

  node_exporter_2:
    image: quay.io/prometheus/node-exporter:v1.8.1
    container_name: node_exporter_2
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave

  node_exporter_3:
    image: quay.io/prometheus/node-exporter:v1.8.1
    container_name: node_exporter_3
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    volumes:
      - ./config/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - ./logs/app.log:/var/log/app.log:ro
    ports:
      - "9273:9273"
    restart: unless-stopped

  grok_exporter:
    image: palobo/grok_exporter:latest
    container_name: grok_exporter
    volumes:
      - ./config/grok_exporter_config.yml:/etc/grok_exporter/config.yml
      - ./logs/app.log:/var/log/app.log:ro
    ports:
      - "9144:9144"
    restart: unless-stopped
