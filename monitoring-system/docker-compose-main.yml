version: "3.8"

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

services:
  prometheus:
    image: docker.io/prom/prometheus:v2.53.0
    container_name: prometheus
    ports:
      - 9090:9090
    command: 
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - '--storage.tsdb.retention.time=30d'  # Keep data for 30 days
      - '--storage.tsdb.path=/prometheus'  # Path for data storage
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - ./prometheus-data:/prometheus
      - ./config/alert.rules.yml:/etc/prometheus/alert.rules.yml
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    image: docker.io/grafana/grafana-oss:11.3.1-ubuntu
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - GF_SMTP_USER=${SMTP_USER}
      - GF_SMTP_PASSWORD=${SMTP_PASSWORD}
      - GF_SMTP_HOST=${SMTP_HOST}
      - GF_SMTP_FROM_ADRESS=${SMTP_FROM_ADRESS}
    networks:
      - monitoring
    restart: unless-stopped

  node_exporter_1:
    image: quay.io/prometheus/node-exporter:v1.8.1
    container_name: node_exporter_1
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
    networks:
      - monitoring

  node_exporter_2:
    image: quay.io/prometheus/node-exporter:v1.8.1
    container_name: node_exporter_2
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
    networks:
      - monitoring

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    volumes:
      - ./config/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - ./logs/app.log:/var/log/app.log:ro
    ports:
      - "9273:9273"
    networks:
      - monitoring
    restart: unless-stopped

  grok_exporter:
    image: palobo/grok_exporter:latest
    container_name: grok_exporter
    volumes:
      - ./config/grok_exporter_config.yml:/etc/grok_exporter/config.yml
      - ./logs/app.log:/var/log/app.log:ro
    ports:
      - "9144:9144"
    networks:
      - monitoring
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:v0.24.0
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ./config/alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
    networks:
      - monitoring
    restart: unless-stopped

  fastapi:
    build:
      context: ./API
      dockerfile: Dockerfile
    container_name: fastapi
    ports:
      - "8000:8000"
    volumes:
      - ./API/app:/app
    networks:
      - monitoring
    restart: unless-stopped

networks:
  monitoring:
    driver: bridge
